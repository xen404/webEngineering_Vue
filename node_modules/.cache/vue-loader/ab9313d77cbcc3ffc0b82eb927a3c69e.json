{"remainingRequest":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/components/config/WidthSlider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/components/config/WidthSlider.vue","mtime":1607793312909},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiV2lkdGhTbGlkZXIiLAogIHByb3BzOiB7CiAgICBtaW46IE51bWJlciwKICAgIG1heDogTnVtYmVyLAogICAgdmFsdWU6IE51bWJlciwKICAgIGxhYmVsOiBTdHJpbmcKICB9LAogIGNvbXB1dGVkOiB7CiAgICBsZWdlbmQoKSB7CiAgICAgIHJldHVybiB0aGlzLmxhYmVsICsgIiBXaWR0aCI7CiAgICB9CiAgfSwKZGF0YTogZnVuY3Rpb24gKCkgewogIHJldHVybiB7CiAgICB2YWx1ZUNtOiB0aGlzLnZhbHVlLzEwLAogICAgbWF4Q206IHRoaXMubWF4LzEwLAogICAgbWluQ20gOiB0aGlzLm1pbi8xMCwKICAgIHJldCA6IDAKICB9Cn0sCm1ldGhvZHM6IHsKICBjaGVja0JvdW5kcyhuZXdWYWx1ZSl7CiAgICAKICAgIGlmKG5ld1ZhbHVlID4gdGhpcy5tYXhDbSl7CiAgICAgIG5ld1ZhbHVlID0gdGhpcy5tYXhDbTsKICAgIH0KICAgIGlmKG5ld1ZhbHVlIDwgdGhpcy5taW5DbSl7CiAgICAgIG5ld1ZhbHVlID0gdGhpcy5taW5DbTsKICAgIH0KICAgIAogICAgbmV3VmFsdWUgPSBuZXdWYWx1ZSoxMDsKICAgIHRoaXMuJGVtaXQoImlucHV0IiwgTWF0aC50cnVuYyhuZXdWYWx1ZSkpOwogIH0sCiAgc2VuZCgpewogICAgCiAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHRoaXMudmFsdWVDbSoxMCk7CiAgfQp9LAoKfTsK"},{"version":3,"sources":["WidthSlider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"WidthSlider.vue","sourceRoot":"src/components/config","sourcesContent":["<template>\n  <fieldset>\n    <legend>{{legend}}</legend>\n    <div class=\"config-row\">\n      <label>{{label}}</label>\n      <div>\n        <input type=\"number\" v-model=\"valueCm\" step=\"0.1\" :aria-label=\"legend\" v-on:change.stop=\"checkBounds($event.target.value)\"/>\n        cm\n      </div>\n    </div>\n    <input type=\"range\" v-model=\"valueCm\" step=\"0.1\" aria-hidden=\"true\" :max=\"maxCm\" :min=\"minCm\" @input=\"send()\"/>\n  </fieldset>\n</template>\n\n<script>\nexport default {\n  name: \"WidthSlider\",\n  props: {\n    min: Number,\n    max: Number,\n    value: Number,\n    label: String\n  },\n  computed: {\n    legend() {\n      return this.label + \" Width\";\n    }\n  },\ndata: function () {\n  return {\n    valueCm: this.value/10,\n    maxCm: this.max/10,\n    minCm : this.min/10,\n    ret : 0\n  }\n},\nmethods: {\n  checkBounds(newValue){\n    \n    if(newValue > this.maxCm){\n      newValue = this.maxCm;\n    }\n    if(newValue < this.minCm){\n      newValue = this.minCm;\n    }\n    \n    newValue = newValue*10;\n    this.$emit(\"input\", Math.trunc(newValue));\n  },\n  send(){\n    \n    this.$emit(\"input\", this.valueCm*10);\n  }\n},\n\n};\n</script>\n\n<style>\n\ninput[type=\"number\"] {\n    -moz-appearance: textfield;\n    width: 2.5em;\n    height: 1em;\n    font-family: inherit;\n    font-size: inherit;\n    text-align: right;\n    background-color: var(--bg-color);\n    border: none;\n    padding: 3px;\n}\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    appearance: none;\n    margin: 0;\n}\n\n/*\nStyling the range input element is very tricky.\nIf you want to know more, see\nhttps://css-tricks.com/sliding-nightmare-understanding-range-input\n*/\ninput[type=\"range\"] {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 100%;\n    height: 0.5rem;\n    background: transparent;\n    background-color: var(--bg-color);\n    border-radius: 0.5rem;\n    margin: 1rem 0;\n}\n\n::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 24px;\n    height: 24px;\n    border-style: none;\n    border-radius: 50%;\n    background-color: white;\n    box-shadow: 1px 1px 3px;\n    margin-top: -2px;\n    color: rgb(144,144,144);\n}\n\n::-moz-range-thumb {\n    width: 24px;\n    height: 24px;\n    border-style: none;\n    border-radius: 50%;\n    background-color: white;\n    box-shadow: 1px 1px 3px;\n    color: rgb(144,144,144);\n}\n\ninput[type=\"range\"]:focus {\n    outline: none;\n}\n</style>\n\n<style scoped>\nfieldset {\n  border: none;\n  min-width: auto;\n  border-bottom: 1px solid #eff2f5;\n  padding: 15px 20px 15px 20px;\n  margin: 0;\n}\n\n/* legend is necessary for accessibility, but we don't want to show it */\nfieldset legend {\n  position: absolute;\n  clip: rect(0 0 0 0);\n}\n\n.config-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n}\n</style>"]}]}