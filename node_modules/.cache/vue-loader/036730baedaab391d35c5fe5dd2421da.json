{"remainingRequest":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/pages/Config.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/pages/Config.vue","mtime":1607793312909},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbmZpZ3VyYXRvciBmaWVsZHNldCB7CiAgYm9yZGVyOiBub25lOwogIG1pbi13aWR0aDogYXV0bzsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VmZjJmNTsKICBwYWRkaW5nOiAxNXB4IDIwcHggMTVweCAyMHB4OwogIG1hcmdpbjogMDsKfQoKLmNvbmZpZ3VyYXRvciBmaWVsZHNldDpsYXN0LW9mLXR5cGUgewogIGJvcmRlci1ib3R0b206IG5vbmU7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwp9CgovKiBsZWdlbmQgaXMgbmVjZXNzYXJ5IGZvciBhY2Nlc3NpYmlsaXR5LCBidXQgd2UgZG9uJ3Qgd2FudCB0byBzaG93IGl0ICovCi5jb25maWd1cmF0b3IgZmllbGRzZXQgbGVnZW5kIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgY2xpcDogcmVjdCgwIDAgMCAwKTsKfQo="},{"version":3,"sources":["Config.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Config.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <main class=\"config-main\">\n    <section class=\"configurator\">\n      <div class=\"preview\" v-if=\"artwork\">\n        <framed-artwork :artwork=\"artwork\" :config=\"config\" @print-sizes=\"printSizes = $event\" />\n        <museum-label :artwork=\"artwork\" />\n      </div>\n\n      <form class=\"museum-label\" id=\"config-form\" @submit.prevent>\n        <print-size-picker v-model=\"config.printSize\" :printSizes=\"printSizes\" />\n        <width-slider :label=\"'Frame'\" :max=\"50\" :min=\"20\" :value=\"config.frameWidth\" v-model=\"config.frameWidth\" />\n        <frame-style-picker :value=\"config.frameStyle\" v-model=\"config.frameStyle\"/>\n        <width-slider :label=\"'Mat'\" :max=\"100\" :min=\"0\" :value=\"config.matWidth\" v-model=\"config.matWidth\"/>\n        <mat-color-picker :value=\"config.matColor\" v-model=\"config.matColor\"/>\n        <fieldset>\n          <legend>Price</legend>\n          <div class=\"config-row\">\n            <label for=\"price\">Price (excl. shipping)</label>\n            <div>\n              <span class=\"price\" id=\"price\">€ {{price.toFixed(2)}}</span>\n            </div>\n          </div>\n          <div class=\"config-row\">\n            <label for=\"total-size\">Total Size (incl. frame and mat)</label>\n            <div id=\"total-size\">{{totalSizeText}} cm</div>\n          </div>\n          <button type=\"button\" class=\"buy\" @click=\"onSubmit()\">Add to Cart</button>\n        </fieldset>\n      </form>\n    </section>\n  </main>\n</template>\n\n<script>\nimport * as ArtmartService from \"@/services/ArtmartService\";\nimport FramedArtwork from \"@/components/FramedArtwork\";\nimport MuseumLabel from \"@/components/MuseumLabel\";\nimport PrintSizePicker from \"@/components/config/PrintSizePicker\";\nimport WidthSlider from \"@/components/config/WidthSlider\";\nimport FrameStylePicker from \"@/components/config/FrameStylePicker\";\nimport MatColorPicker from \"@/components/config/MatColorPicker\"\n\nexport default {\n  name: \"Config\",\n  components: {\n    FramedArtwork,\n    MuseumLabel,\n    PrintSizePicker,\n    WidthSlider,\n    FrameStylePicker,\n    MatColorPicker\n  },\n  props: {\n    artworkId: Number\n  },\n  data: function() {\n    return {\n      artwork: null,\n      printSizes: { S: [0, 0], M: [0, 0], L: [0, 0] },\n      config: {\n        printSize: \"M\",\n        frameWidth: 40,\n        frameStyle: this.$store.getters.sortedFrames[0].style,\n        matWidth: 55,\n        matColor: this.$store.getters.sortedMats[0].color\n      }\n    };\n  },\n  computed: {\n    frame() {\n      return this.$store.state.frames.get(this.config.frameStyle);\n    },\n    price() {\n      const cF = (this.config.frameWidth / 10) * this.frame.cost;\n      const cM = (this.config.matWidth / 10) * 5;\n      const s = { S: 1, M: 2, L: 3.5 }[this.config.printSize];\n      return ((3000 + cF + cM) * s)/100;\n    },\n    totalSize() {\n      const [w, h] = this.printSizes[this.config.printSize];\n      const x = 2 * this.config.frameWidth + 2 * this.config.matWidth;\n      return [w + x, h + x];\n    },\n    totalSizeText() {\n      const [w, h] = this.totalSize;\n      return (w / 10).toFixed(1) + \" × \" + (h / 10).toFixed(1);\n    }\n  },\n  mounted() {\n    ArtmartService.getArtwork(this.artworkId).then(artwork => {\n      if (artwork == null) {\n        this.$router.replace({ path: \"/search\" });\n      }\n      this.artwork = artwork;\n      \n    });\n\n    const clamp = (x, min, max) => Math.trunc(Math.min(Math.max(x, min), max));\n\n    const query = this.$route.query;\n    if ([\"S\", \"M\", \"L\"].includes(query.printSize)) {\n      this.config.printSize = query.printSize;\n    }\n    if (isFinite(+query.frameWidth)) {\n      this.config.frameWidth = clamp(+query.frameWidth, 20, 50);\n    }\n    const frameStyles = this.$store.getters.sortedFrames.map(x => x.style);\n    if (frameStyles.includes(query.frameStyle)) {\n      this.config.frameStyle = query.frameStyle;\n    }\n    if (isFinite(+query.matWidth)) {\n      this.config.matWidth = clamp(+query.matWidth, 0, 100);\n    }\n    const matColors = this.$store.getters.sortedMats.map(x => x.color);\n    if (matColors.includes(query.matColor)) {\n      this.config.matColor = query.matColor;\n    }\n  },\n  watch: {\n    config: {\n      deep: true,\n      handler() {\n        const q = this.$route.query;\n        const c = this.config;\n        if (\n          q.frameWidth != c.frameWidth ||\n          q.matWidth != c.matWidth ||\n          q.frameStyle != c.frameStyle ||\n          q.matColor != c.matColor ||\n          q.printSize != c.printSize\n        ) {\n          this.$router.replace({ query: this.config });\n        }\n      }\n    }\n  },\n  methods: {\n    onSubmit(){\n     this.$store.dispatch(\"addToCart\", {artworkId: this.artworkId, frameStyle: this.config.frameStyle, frameWidth: this.config.frameWidth, matColor: this.config.matColor, matWidth: this.config.matWidth, printSize: this.config.printSize})\n      this.$router.replace({path: \"/cart\"})\n      \n    }\n  }\n};\n</script>\n\n<style>\n.configurator fieldset {\n  border: none;\n  min-width: auto;\n  border-bottom: 1px solid #eff2f5;\n  padding: 15px 20px 15px 20px;\n  margin: 0;\n}\n\n.configurator fieldset:last-of-type {\n  border-bottom: none;\n  display: flex;\n  flex-direction: column;\n}\n\n/* legend is necessary for accessibility, but we don't want to show it */\n.configurator fieldset legend {\n  position: absolute;\n  clip: rect(0 0 0 0);\n}\n</style>\n\n<style scoped>\n.preview {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 500px;\n  max-height: 500px;\n  min-width: 250px;\n  flex: 1 1 250px;\n  margin: 2rem 50px;\n}\n\n.preview img {\n  box-shadow: 0px 30px 60px 0px rgba(0, 0, 0, 0.5);\n}\n\n.preview .museum-label {\n  font-size: 0.9rem;\n  margin-top: 2rem;\n  padding: 1em;\n}\n\n.configurator {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 4rem;\n}\n\n.configurator form {\n  width: 400px;\n}\n\n@media (max-width: 600px) {\n  .config-main {\n    margin: 0;\n  }\n\n  .preview {\n    width: 90%;\n    flex: 0 0 auto;\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  .configurator {\n    flex-direction: column;\n    width: 100%;\n    margin: 0;\n  }\n\n  .configurator form {\n    width: 100%;\n    box-shadow: none;\n  }\n}\n\n.config-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n}\n\n.price {\n  font-weight: bold;\n  font-size: 1.5rem;\n}\n\n.buy {\n  margin-top: 1rem;\n  width: 100%;\n}\n</style>"]}]}