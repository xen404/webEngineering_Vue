{"remainingRequest":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/components/config/PrintSizePicker.vue?vue&type=style&index=0&id=12e4981f&scoped=true&lang=css&","dependencies":[{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/components/config/PrintSizePicker.vue","mtime":1607793312908},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNlZ21lbnRlZCB7CiAgZGlzcGxheTogZmxleDsKICBoZWlnaHQ6IDNlbTsKfQoKLnNlZ21lbnRlZCBpbnB1dCB7CiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOwogIC1tb3otYXBwZWFyYW5jZTogbm9uZTsKICBhcHBlYXJhbmNlOiBub25lOwogIG1hcmdpbjogMDsKICBib3JkZXItc3R5bGU6IG5vbmU7Cn0KCi5zZWdtZW50ZWQgbGFiZWwgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGN1cnNvcjogcG9pbnRlcjsKICBvcGFjaXR5OiAwLjU7Cn0KCi5zZWdtZW50ZWQgaW5wdXQ6Y2hlY2tlZCArIGxhYmVsIHsKICBmb250LXdlaWdodDogYm9sZDsKICBvcGFjaXR5OiAxOwp9Cg=="},{"version":3,"sources":["PrintSizePicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PrintSizePicker.vue","sourceRoot":"src/components/config","sourcesContent":["<template>\n  <fieldset>\n    <legend>Print Size</legend>\n    <div class=\"segmented\">\n      <input type=\"radio\" name=\"printSize\" id=\"print-size-s\" value=\"S\" v-model=\"selected\" />\n      <label for=\"print-size-s\">\n        Small\n        <br />\n        {{printSizes.S[0] / 10}} × {{printSizes.S[1] / 10}} cm\n      </label>\n      <input type=\"radio\" name=\"printSize\" id=\"print-size-m\" value=\"M\" v-model=\"selected\" />\n      <label for=\"print-size-m\">\n        Medium\n        <br />\n        {{printSizes.M[0] / 10}} × {{printSizes.M[1] / 10}} cm\n      </label>\n      <input type=\"radio\" name=\"printSize\" id=\"print-size-l\" value=\"L\" v-model=\"selected\" />\n      <label for=\"print-size-l\">\n        Large\n        <br />\n        {{printSizes.L[0] / 10}} × {{printSizes.L[1] / 10}} cm\n      </label>\n    </div>\n  </fieldset>\n</template>\n\n<script>\nexport default {\n  name: \"PrintSizePicker\",\n  props: {\n    value: String,\n    printSizes: {\n      S: Array,\n      M: Array,\n      L: Array\n    }\n  },\n  computed: {\n    selected: {\n      get() {\n        return this.value;\n      },\n      set(newValue) {\n        this.$emit(\"input\", newValue);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.segmented {\n  display: flex;\n  height: 3em;\n}\n\n.segmented input {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  margin: 0;\n  border-style: none;\n}\n\n.segmented label {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  cursor: pointer;\n  opacity: 0.5;\n}\n\n.segmented input:checked + label {\n  font-weight: bold;\n  opacity: 1;\n}\n</style>"]}]}