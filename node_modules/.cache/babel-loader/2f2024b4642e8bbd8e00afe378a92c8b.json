{"remainingRequest":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/babel-loader/lib/index.js!/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/eslint-loader/index.js??ref--13-0!/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/store.js","dependencies":[{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/store.js","mtime":1607793312911},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/karton/Documents/projects/CV_GITHUB/a4-group-62/src/store.js"],"names":["Vuex","ArtmartService","buildStore","Store","state","frames","mats","destinations","cart","getters","sortedFrames","Array","from","values","sortedMats","sortedDestinations","cartIsEmpty","length","cartTotal","total","item","price","mutations","setFrames","setMats","setDestinations","setCart","actions","loadFrames","context","getFrames","framesList","Map","frame","set","style","commit","loadMats","getMats","matsList","mat","color","loadDestinations","getShipping","shipping","destinationsList","destination","country","loadCart","getCart","reverse","addToCart","product","ok","dispatch","removeFromCart","cartItemId","deleteCartItem"],"mappings":"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","sourcesContent":["import Vuex from \"vuex\";\nimport * as ArtmartService from \"@/services/ArtmartService\";\n\nexport default function buildStore() {\n  return new Vuex.Store({\n    state: {\n      frames: null,       // Map: style -> frame { style, label, slice, cost }\n      mats: null,         // Map: color -> mat { color, label, hex }\n      destinations: null, // Map: country -> destination { country, displayName, cost }\n      cart: []            // Array of cart items\n    },\n    getters: {\n      sortedFrames: state => {\n        return Array.from(state.frames.values())\n      },\n      sortedMats: state => {\n        return Array.from(state.mats.values())\n      },\n      sortedDestinations: state => {\n        return Array.from(state.destinations.values())\n      },\n      cartIsEmpty: state => {\n        return state.cart.length == 0\n      },\n      cartTotal: state => {\n        let total = 0;\n        for (const item of state.cart) {\n          total += item.price;\n        }\n        return total;\n      }\n    },\n    mutations: {\n      setFrames(state, frames) {\n        state.frames = frames\n      },\n      setMats(state, mats) {\n        state.mats = mats\n      },\n      setDestinations(state, destinations) {\n        state.destinations = destinations\n      },\n      setCart(state, cart) {\n        state.cart = cart\n      }\n    },\n    actions: {\n      async loadFrames(context) {\n        const framesList = await ArtmartService.getFrames();\n        const frames = new Map();\n        for (const frame of framesList) {\n          frames.set(frame.style, frame);\n        }\n        context.commit('setFrames', frames)\n      },\n      async loadMats(context) {\n        const matsList = await ArtmartService.getMats();\n        const mats = new Map();\n        for (const mat of matsList) {\n          mats.set(mat.color, mat);\n        }\n        context.commit('setMats', mats)\n      },\n      async loadDestinations(context) {\n        const shipping = await ArtmartService.getShipping();\n        const destinationsList = shipping.destinations ?? [];\n        const destinations = new Map();\n        for (const destination of destinationsList) {\n          destinations.set(destination.country, destination);\n        }\n        context.commit('setDestinations', destinations);\n      },\n      async loadCart(context) {\n        const cart = await ArtmartService.getCart()\n        context.commit('setCart', cart.reverse())\n      },\n      async addToCart(context, product) {\n        const ok = await ArtmartService.addToCart(product)\n        await context.dispatch('loadCart')\n        return ok\n      },\n      async removeFromCart(context, cartItemId) {\n        const ok = await ArtmartService.deleteCartItem(cartItemId)\n        await context.dispatch('loadCart')\n        return ok\n      }\n    }\n  })\n}\n"]}]}